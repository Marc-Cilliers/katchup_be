// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Chatter {
  id              String     @default(cuid()) @id
  username        String
  channels        UserChatter[]
}


model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id              String    @default(cuid()) @id
  name            String
  image           String
  email           String?   @unique
  emailVerified   DateTime?
  admin           Boolean   @default(false)
  badges          Json      @default("[]")

  chatters        UserChatter[]
  accounts        Account[]
  sessions        Session[]
}

model VerificationToken {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model YoutubeVideo {
  id              String     @default(cuid()) @id
  timestamp       DateTime
  archived        DateTime?  
  url             String
  videoId         String
  title           String?
  duration        String?
  channel         String?
  channelId       String?
  thumbnail       String?
  userChatter         UserChatter   @relation(fields: [userChatterId], references: [id])
  userChatterId       String
}

model ChatterRating {
  id              String        @default(cuid()) @id
  userChatter     UserChatter   @relation(fields: [userChatterId], references: [id])
  userChatterId       String
  rating          Int           @default(0)
}

model UserChatter {
  id              String    @default(cuid()) @id
  chatter         Chatter   @relation(fields: [chatterId], references: [id])
  chatterId       String
  user            User      @relation(fields: [userId], references: [id])
  userId          String
  chatterRatings   ChatterRating[]
  youtubeVideos     YoutubeVideo[]
  badges          Json[]         @default([])
  color           String
  mod             Boolean        @default(false)
  subscriber      Boolean        @default(false)
  turbo           Boolean        @default(false)
}

model Twitch {
  id              String    @default(cuid()) @id
  access_token    String
  refresh_token   String
  auth_token      String
}