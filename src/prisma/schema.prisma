// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Chatter {
  id              String     @default(cuid()) @id
  username        String
  youtubeVideos   YoutubeVideo[]
  ratings         ChatterRating[]
}


model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id              String    @default(cuid()) @id
  name            String
  image           String
  email           String?   @unique
  emailVerified   DateTime?
  youtubeVideos   YoutubeVideo[]
  chatterRatings  ChatterRating[]

  accounts        Account[]
  sessions        Session[]
}

model VerificationToken {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model YoutubeVideo {
  id              String     @default(cuid()) @id
  timestamp       DateTime
  archived        DateTime?  
  url             String
  title           String?
  duration        String?
  channel         String?
  thumbnail       String?
  chatter         Chatter   @relation(fields: [chatterId], references: [id])
  chatterId       String
  user            User  @relation(fields: [userId], references: [id])
  userId          String
}

model ChatterRating {
  id              String    @default(cuid()) @id
  chatter         Chatter   @relation(fields: [chatterId], references: [id])
  chatterId       String
  user            User  @relation(fields: [userId], references: [id])
  userId          String
  rating          Int       @default(0)
}